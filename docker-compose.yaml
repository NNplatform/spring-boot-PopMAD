version: '3.8'

services:

  product-redis:
    image: redis:7.2-alpine
    container_name: popMAD-redis
    command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru --maxclients 20000 --tcp-backlog 511 --timeout 0 --tcp-keepalive 300 --appendonly yes --save 900 1 --save 300 10 --save 60 10000
    networks:
      - popMAD
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  order-rabbitmq:
    image: rabbitmq:3-management
    container_name: popMAD-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - popMAD

  stock-db:
    container_name: popMAD-stock-database
    build:
      context: ./stock-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: stock
      POSTGRES_USER: nhoona
      POSTGRES_PASSWORD: nhoona
    volumes:
      - ./stock-database/drop:/docker-entrypoint-initdb.d/drop
      - ./stock-database/schema:/docker-entrypoint-initdb.d/schema
      - ./stock-database/index:/docker-entrypoint-initdb.d/index
      - ./stock-database/initial:/docker-entrypoint-initdb.d/initial
      - stock-data:/var/lib/postgresql/data
    ports:
      - "5601:5432"
    networks:
      - popMAD

  stock-service:
    container_name: popMAD-stock-service
    build:
      context: ./stock-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: stock-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://stock-db:5432/stock
      SPRING_DATASOURCE_USERNAME: nhoona
      SPRING_DATASOURCE_PASSWORD: nhoona
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_ECOMMERCE: DEBUG
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
    depends_on:
      - stock-db
    networks:
      - popMAD
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  product-db:
    container_name: popMAD-product-database
    build:
      context: ./product-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: product
      POSTGRES_USER: nhoona
      POSTGRES_PASSWORD: nhoona
    volumes:
      - ./product-database/drop:/docker-entrypoint-initdb.d/drop
      - ./product-database/schema:/docker-entrypoint-initdb.d/schema
      - ./product-database/index:/docker-entrypoint-initdb.d/index
      - ./product-database/initial:/docker-entrypoint-initdb.d/initial
      - product-data:/var/lib/postgresql/data
    ports:
      - "5602:5432"
    networks:
      - popMAD

  product-service:
    container_name: popMAD-product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: product-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://product-db:5432/product
      SPRING_DATASOURCE_USERNAME: nhoona
      SPRING_DATASOURCE_PASSWORD: nhoona
      SPRING_REDIS_HOST: product-redis
      SPRING_REDIS_PORT: 6379
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_ECOMMERCE: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS: DEBUG
      LOGGING_LEVEL_IO_LETTUCE: DEBUG
      SPRING_REDIS_LETTUCE_POOL_MAX_ACTIVE: 200
      SPRING_REDIS_LETTUCE_POOL_MAX_IDLE: 50
      SPRING_REDIS_LETTUCE_POOL_MIN_IDLE: 20
      SPRING_REDIS_TIMEOUT: 5000
      SPRING_CACHE_REDIS_TIME_TO_LIVE: 3600000
      SERVER_PORT: 8081
      SPRING_REDIS_LETTUCE_POOL_MAX_WAIT: -1
      SPRING_REDIS_LETTUCE_SHUTDOWN_TIMEOUT: 100ms
      SPRING_REDIS_LETTUCE_POOL_TIMEBETWEENRUNSMILLIS: 100
      SPRING_REDIS_LETTUCE_CLIENT_NAME: product-service-client
      SPRING_REDIS_LETTUCE_CLIENT_TYPE: STANDALONE
      SPRING_REDIS_LETTUCE_CLIENT_RESOURCES_ENABLED: true
      SPRING_REDIS_LETTUCE_CLIENT_RESOURCES_THREAD_POOL_SIZE: 4
      SPRING_REDIS_LETTUCE_CLIENT_RESOURCES_SHUTDOWN_QUIET_PERIOD: 100ms
      SPRING_REDIS_LETTUCE_CLIENT_RESOURCES_SHUTDOWN_TIMEOUT: 2s
    ports:
      - "8081:8081"
    depends_on:
      - product-db
      - product-redis
    networks:
      - popMAD
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  cart-db:
    container_name: popMAD-cart-database
    build:
      context: ./cart-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: cart
      POSTGRES_USER: nhoona
      POSTGRES_PASSWORD: nhoona
    volumes:
      - ./cart-database/drop:/docker-entrypoint-initdb.d/drop
      - ./cart-database/schema:/docker-entrypoint-initdb.d/schema
      - ./cart-database/index:/docker-entrypoint-initdb.d/index
      - cart-data:/var/lib/postgresql/data
    ports:
      - "5603:5432"
    networks:
      - popMAD

  cart-service:
    container_name: popMAD-cart-service
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: cart-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://cart-db:5432/cart
      SPRING_DATASOURCE_USERNAME: nhoona
      SPRING_DATASOURCE_PASSWORD: nhoona
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_ECOMMERCE: DEBUG
      PRODUCT_SERVICE_URL: http://product-service:8081
      STOCK_SERVICE_URL: http://stock-service:8082
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    depends_on:
      - cart-db
      - product-service
      - stock-service
    networks:
      - popMAD
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  order-db:
    container_name: popMAD-order-database
    build:
      context: ./order-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: nhoona
      POSTGRES_PASSWORD: nhoona
    volumes:
      - ./order-database/drop:/docker-entrypoint-initdb.d/drop
      - ./order-database/schema:/docker-entrypoint-initdb.d/schema
      - ./order-database/index:/docker-entrypoint-initdb.d/index
      - order-data:/var/lib/postgresql/data
    ports:
      - "5604:5432"
    networks:
      - popMAD

  order-service:
    container_name: popMAD-order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: order-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/order
      SPRING_DATASOURCE_USERNAME: nhoona
      SPRING_DATASOURCE_PASSWORD: nhoona
      SPRING_RABBITMQ_HOST: order-rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_AMQP: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_ECOMMERCE: TRACE
      CART_SERVICE_URL: http://cart-service:8083
      PRODUCT_SERVICE_URL: http://product-service:8081
      SERVER_PORT: 8084
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_REGISTERHEALTHINDICATOR: "true"
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_SLIDINGWINDOWSIZE: 100
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_FAILURERATETHRESHOLD: 50
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_WAITDURATIONINOPENSTATE: 10s
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_PERMITTEDNUMBEROFCALLSINHALFCPENSTATE: 10
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_CARTSERVICE_EVENTCONSUMERBUFFERSIZE: 100
    ports:
      - "8084:8084"
    depends_on:
      - order-db
      - order-rabbitmq
      - cart-service
      - product-service
    networks:
      - popMAD
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  auth-db:
    container_name: popMAD-auth-database
    build:
      context: ./auth-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: nhoona
      POSTGRES_PASSWORD: nhoona
    volumes:
      - ./auth-database/drop:/docker-entrypoint-initdb.d/drop
      - ./auth-database/schema:/docker-entrypoint-initdb.d/schema
      - ./auth-database/index:/docker-entrypoint-initdb.d/index
      - ./auth-database/initial:/docker-entrypoint-initdb.d/initial
      - auth-data:/var/lib/postgresql/data
    ports:
      - "5600:5432"
    networks:
      - popMAD

  auth-service:
    container_name: popMAD-auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth
      SPRING_DATASOURCE_USERNAME: nhoona
      SPRING_DATASOURCE_PASSWORD: nhoona
    ports:
      - "8080:8080"
    depends_on:
      - auth-db
    networks:
      - popMAD
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

  nginx:
    image: nginx:latest
    container_name: popMAD-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - stock-service
      - product-service
      - cart-service
      - order-service
      - auth-service
    networks:
      - popMAD

volumes:
  stock-data:
  product-data:
  cart-data:
  order-data:
  auth-data:

networks:
  popMAD:
    external: true